- name: update ssh slackware
  slackpkg:
    name: openssl,openssh,libssh,openssl-solibs
    state: latest
    update_cache: true
  become: true
  when:
    - ansible_hostname in groups['slackware']
  notify:
    - restart ssh
- name: set ssh port
  replace:
    path: /etc/ssh/sshd_config
    regexp: "^#? ?Port [0-9]*$"
    replace: "Port {{ ansible_port }}"
  become: true
  when:
    - ansible_hostname in groups['unix']
  notify:
    - restart ssh
- name: disable ssh root login
  replace:
    path: /etc/ssh/sshd_config
    regexp: "^#? ?PermitRootLogin (yes|no)$"
    replace: "PermitRootLogin no"
  become: true
  when:
    - ansible_hostname in groups['unix']
    - ansible_hostname in groups['local']
  notify:
    - restart ssh
- name: copy our public key to a remote host
  authorized_key:
    user: nihlaeth
    state: present
    key: "{{ lookup('file', '/root/.ssh/persephone.pub') }}"
  when: ansible_hostname in groups['unix']
- name: create .ssh directory
  file:
    path: ~/.ssh
    state: directory
    mode: 0700
    owner: "{{ item }}"
  become_user: "{{ item }}"
  become: true
  when: ansible_hostname in groups['unix']
  with_items: "{{ managed_users }}"
- name: generate ssh key
  shell: 'ssh-keygen -f ~/.ssh/{{ ansible_hostname }} -q -N ""'
  args:
      creates: "~/.ssh/{{ ansible_hostname }}"
  become_user: "{{ item }}"
  become: true
  when:
    - ansible_hostname in groups['unix']
  with_items: "{{ managed_users }}"
- name: Read SSH public key to authorize github
  shell: "cat ~/.ssh/{{ ansible_hostname }}.pub"
  become_user: "{{ item }}"
  become: true
  when: ansible_hostname in groups['unix']
  with_items: "{{ managed_users }}"
  register: ssh_pub_key
  changed_when: False
- name: Authorize key with GitHub
  local_action:
    module: github_key
    name: "{{ ansible_hostname }}-{{ item.0 }}"
    token: '{{ github_access_token }}'
    pubkey: '{{ item.1.stdout }}'
  become_user: "{{ item.0 }}"
  become: true
  when:
    - ansible_hostname in groups['unix']
  with_together:
    - "{{ managed_users }}"
    - "{{ ssh_pub_key.results }}"
  ignore_errors: yes
- set_fact:
    sshconfig_content: "{{ lookup('template', 'templates/config.j2') }}"
- name: write ssh config
  blockinfile:
    dest: ~/.ssh/config
    content: '{{ sshconfig_content }}'
    state: present
    create: yes
    marker: '# {mark} ANSIBLE MANAGED BLOCK'
    insertbefore: BOF
    mode: 0700
  become_user: "{{ item }}"
  become: true
  when:
    - ansible_hostname in groups['local']
    - ansible_hostname in groups['unix']
  with_items: "{{ managed_users }}"

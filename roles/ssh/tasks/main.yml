- name: set ssh port
  replace:
    path: /etc/ssh/sshd_config
    regexp: "^#? ?Port [0-9]*$"
    replace: "Port {{ ansible_port }}"
  become: true
  when:
    - ansible_hostname in groups['unix']
- name: disable ssh root login
  replace:
    path: /etc/ssh/sshd_config
    regexp: "^#? ?PermitRootLogin (yes|no)$"
    replace: "PermitRootLogin no"
  become: true
  when:
    - ansible_hostname in groups['unix']
    - ansible_hostname in groups['local']
- name: copy our public key to a remote host
  authorized_key:
    user: nihlaeth
    state: present
    key: "{{ lookup('file', '/root/.ssh/persephone.pub') }}"
  when: ansible_hostname in groups['unix']
- name: generate ssh key
  shell: 'ssh-keygen -f ~/.ssh/{{ ansible_hostname }} -q -N ""'
  args:
      creates: "~/.ssh/{{ ansible_hostname }}"
  become_user: "{{ item }}"
  become: true
  when:
    - ansible_hostname in groups['unix']
  with_items:
    - root
    - nihlaeth
- name: Read SSH public key to authorize github
  shell: "cat ~/.ssh/{{ ansible_hostname }}.pub"
  become_user: "{{ item }}"
  become: true
  when: ansible_hostname in groups['unix']
  with_items:
    - root
    - nihlaeth
  register: ssh_pub_key
  changed_when: False
- name: Authorize key with GitHub
  local_action:
    module: github_key
    name: "{{ ansible_hostname }}-{{ item.user }}"
    token: '{{ github_access_token }}'
    pubkey: '{{ item.key }}'
  become_user: "{{ item.user }}"
  become: true
  when:
    - ansible_hostname in groups['unix']
  with_items:
    - {'user': 'root', 'key': "{{ ssh_pub_key.results[0].stdout }}"}
    - {'user': 'nihlaeth', 'key': "{{ ssh_pub_key.results[1].stdout }}"}
  ignore_errors: yes
- name: create .ssh directory
  file:
    path: ~/.ssh
    state: directory
    mode: 0700
    owner: "{{ item }}"
  become_user: "{{ item }}"
  become: true
  when: ansible_hostname in groups['unix']
  with_items:
    - root
    - nihlaeth
- name: write ssh config
  template:
    src: config.j2
    backup: yes
    dest: ~/.ssh/config
    mode: 0700
    owner: "{{ item }}"
  become_user: "{{ item }}"
  become: true
  when:
    - ansible_hostname in groups['local']
    - ansible_hostname in groups['unix']
  with_items:
    - root
    - nihlaeth
